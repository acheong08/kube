apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: traefik
  labels:
    app: dashboard
  name: dashboard-ingress
  namespace: kubernetes-dashboard
spec:
  rules:
  - host: kube-dashboard.duti.dev
    http:
      paths:
      - backend:
          service:
            name: caddy
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - kube-dashboard.duti.dev
    secretName: dashboard-tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: caddy-config
  namespace: kubernetes-dashboard
data:
  Caddyfile: |
    :80 {
        route {
            basic_auth {
                kube $2a$14$hovE7N8ydaVvrHFe6A4APOQeaRME30KvkYjjXEU7VP3.MAgHrUp8K
            }
            reverse_proxy kubernetes-dashboard-kong-proxy:443 {
                header_up authorization "Bearer {env.BEARER_TOKEN}"
                transport http {
                    tls
                    tls_insecure_skip_verify
                }
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caddy
  template:
    metadata:
      labels:
        app: caddy
    spec:
      containers:
      - name: caddy
        image: caddy:latest
        ports:
        - containerPort: 80
        env:
        - name: BEARER_TOKEN
          valueFrom:
            secretKeyRef:
              name: admin-user
              key: token
        volumeMounts:
        - name: caddy-config-volume
          mountPath: /etc/caddy
      volumes:
      - name: caddy-config-volume
        configMap:
          name: caddy-config
          items:
          - key: Caddyfile
            path: Caddyfile
---
apiVersion: v1
kind: Service
metadata:
  name: caddy
  namespace: kubernetes-dashboard
spec:
  type: ClusterIP
  selector:
    app: caddy
  ports:
    - port: 80
      targetPort: 80
