apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    spec.ingressClassName: traefik
  labels:
    app: statichost
  name: statichost-ingress
  namespace: statichost
spec:
  rules:
  - host: duti.dev
    http:
      paths:
      - backend:
          service:
            name: caddy
            port:
              number: 80
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - duti.dev
    secretName: statichost-tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: caddy-config
  namespace: statichost
data:
  Caddyfile: |
    :80 {
        route {
          root * /data
          file_server
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy
  namespace: statichost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: caddy
  template:
    metadata:
      labels:
        app: caddy
    spec:
      containers:
      - name: caddy
        image: caddy:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: caddy-config-volume
          mountPath: /etc/caddy
        - name: statichost-volume
          mountPath: /data
      volumes:
      - name: caddy-config-volume
        configMap:
          name: caddy-config
          items:
          - key: Caddyfile
            path: Caddyfile
      - name: statichost-volume
        persistentVolumeClaim:
          claimName: statichost-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: caddy
  namespace: statichost
spec:
  type: ClusterIP
  selector:
    app: caddy
  ports:
    - port: 80
      targetPort: 80
